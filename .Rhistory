library(twitteR)
library(purrr)
library(dplyr)
require('ROAuth')
require('RCurl')
library(plyr)
library(stringr)
## SENTIMENT FUNCTION
## NEW
score.sentiment <- function(sentences, pos.words, neg.words, .progress='none')
{
require(plyr)
require(stringr)
scores <- laply(sentences, function(sentence, pos.words, neg.words)
{
sentence <- gsub('[[:punct:]]', "", sentence)
sentence <- gsub('[[:cntrl:]]', "", sentence)
sentence <- gsub('\\d+', "", sentence)
sentence <- tolower(sentence)
word.list <- str_split(sentence, '\\s+')
words <- unlist(word.list)
pos.matches <- match(words, pos.words)
neg.matches <- match(words, neg.words)
pos.matches <- !is.na(pos.matches)
neg.matches <- !is.na(neg.matches)
score <- sum(pos.matches) - sum(neg.matches)
return(score)
}, pos.words, neg.words, .progress =.progress)
scores.df <- data.frame(score=scores, text=sentences)
return(scores.df)
pos.words= scan('C:/Users/satyam/Downloads/Sentiment Analysis/positive-words.txt', what='character', comment.char=';')
neg.words= scan( 'C:/Users/satyam/Downloads/Sentiment Analysis/negative-words.txt', what='character', comment.char=';')
pos.words= scan('C:/Users/satyam/Downloads/Sentiment Analysis/positive-words.txt', what='character', comment.char=';')
neg.words= scan( 'C:/Users/satyam/Downloads/Sentiment Analysis/negative-words.txt', what='character', comment.char=';')
pos.words= scan('C:/Users/satyam/Downloads/Sentiment Analysis/positive-words.txt', what='character', comment.char=';')
neg.words= scan( 'C:/Users/satyam/Downloads/Sentiment Analysis/negative-words.txt', what='character', comment.char=';')
